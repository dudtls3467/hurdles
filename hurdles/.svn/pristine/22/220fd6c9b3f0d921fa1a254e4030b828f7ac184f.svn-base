<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<%@ taglib prefix="fmt" uri="http://java.sun.com/jsp/jstl/fmt"%>
<%@ taglib prefix="fn" uri="http://java.sun.com/jsp/jstl/functions" %>

<c:set var="nav" value="restaurant" scope="request"/>
<c:set var="titleName" value="식당 상세보기" scope="request"/>
<c:set var="paging" value="${paginationInfo}"/>
<c:set var="pagingOption" property="" value="${paginationInfo.getSearchVo()}"/>

<!DOCTYPE html>
<html lang="ko">
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
	<title>데모 ${titleName}</title>
	<jsp:include page="/WEB-INF/view/site/layout/prestyle.jsp" />
		<style>
			.map-container {
				width: 100%;
				height: 400px;
			}

			.profile-img {
				width: 40px;
				height: 40px;
				border-radius: 50%;
				object-fit: cover;
			}
		</style>
</head>

<body>
  	<jsp:include page="/WEB-INF/view/site/layout/header.jsp" />

  	<main class="main">
			<div class="container-fluid">
				<div class="container my-5">
				<!-- Restaurant Info -->
				<div class="row mb-4">
					<div class="col-lg-8">
						<h1 id="restaurant-name">${restaurant.restaurantName}</h1>
						<p><strong>카테고리 :</strong> <span id="restaurant-category">${restaurant.resturantCodeName}</span></p>
						<p>
							⭐ 
							<span id="restaurant-rating">${restaurant.score}</span>
							(<span id="review-count">${restaurant.reviewCnt} 리뷰</span>)
						</p>
						<div>
							<strong>식당 설명</strong> 
							<p id="food-categories">${restaurant.restaurantDes}</p>
						</div>
					</div>
					<div class="col-lg-4">
						<img 
							src="/upload/restaurant/${restaurant.fileSaveName}"
							alt="Restaurant Photo"
							class="img-fluid rounded shadow"
							onerror="this.src='${pageContext.request.contextPath}/assets/img/image-error.png'"
						/>
					</div>
				</div>

				<!-- Menu -->
				<section id="menu" class="menu section">
					<!-- Section Title -->
					<div class="container section-title" data-aos="fade-up">
						<h2>Our Menu</h2>
						<p><span>Check Our</span> <span class="description-title">식당 메뉴</span></p>
					</div><!-- End Section Title -->

					<div class="container">
						<ul class="nav nav-tabs d-flex justify-content-center" data-aos="fade-up" data-aos-delay="100">

							<li class="nav-item">
								<a class="nav-link active show" data-bs-toggle="tab" data-bs-target="#menu-starters">
									<h4>메뉴</h4>
								</a>
							</li><!-- End tab nav item -->

							<li class="nav-item">
								<a class="nav-link" data-bs-toggle="tab" data-bs-target="#menu-breakfast">
									<h4>예약 메뉴</h4>
								</a><!-- End tab nav item -->

							</li>
							<li class="nav-item">
								<a class="nav-link" data-bs-toggle="tab" data-bs-target="#menu-lunch">
									<h4>주문 메뉴</h4>
								</a>
							</li><!-- End tab nav item -->
						</ul>

						<div class="tab-content" data-aos="fade-up" data-aos-delay="200">
								<div class="tab-pane fade active show" id="menu-starters">
									<div class="tab-header text-center">
										<p>Menu</p>
										<h3>식당 메뉴</h3>
									</div>
									<div class="row gy-5">
										<c:forEach items="${menuList}" var="menu">
											<div class="col-lg-4 menu-item">
												<img 
													src="/upload/menu/${menu.fileSaveName}"
													class="img-fluid rounded mb-2"
													alt=""
													onerror="this.src='${pageContext.request.contextPath  }/assets/img/image-error.png'"
												>
												<h4>${menu.menuName}</h4>
												<p class="ingredients">${menu.menuDes}</p>
												<p class="price">
													<fmt:formatNumber value="${menu.menuPrice}" pattern="#,###"/>원
												</p>
											</div><!-- Menu Item -->
										</c:forEach>

									</div>
								</div>
								<!-- End Starter Menu Content -->
								<div class="tab-pane fade" id="menu-breakfast">
									<div class="tab-header text-center">
										<p>Menu</p>
										<h3>예약 메뉴</h3>
									</div>
									<div class="row gy-5">
										<c:forEach items="${menuList}" var="menu">
											<div class="col-lg-4 menu-item">
												<img 
													src="/upload/menu/${menu.fileSaveName}"
													class="img-fluid rounded mb-2"
													alt=""
													onerror="this.src='${pageContext.request.contextPath  }/assets/img/image-error.png'"
												>
												<h4>${menu.menuName}</h4>
												<p class="ingredients">${menu.menuDes}</p>
												<p class="price">
													<fmt:formatNumber value="${menu.menuPrice}" pattern="#,###"/>원
												</p>
											</div><!-- Menu Item -->
										</c:forEach>

									</div>
								</div><!-- End Starter Menu Content -->

								<div class="tab-pane fade" id="menu-lunch">
									<div class="tab-header text-center">
										<p>Menu</p>
										<h3>주문 메뉴</h3>
									</div>
									<div class="row gy-5">
										<c:forEach items="${menuList}" var="menu">
											<div class="col-lg-4 menu-item">
												<img 
													src="/upload/menu/${menu.fileSaveName}"
													class="img-fluid rounded mb-2"
													alt=""
													onerror="this.src='${pageContext.request.contextPath  }/assets/img/image-error.png'"
												>
												<h4>${menu.menuName}</h4>
												<p class="ingredients">${menu.menuDes}</p>
												<p class="price">
													<fmt:formatNumber value="${menu.menuPrice}" pattern="#,###"/>원
												</p>
											</div><!-- Menu Item -->
										</c:forEach>

									</div>
								</div><!-- End Starter Menu Content -->
						</div>
					</div>
				</section><!-- /Menu Section -->

				<hr>

				<!-- 쿠폰 -->
				<h2 class="mt-5">식당 쿠폰</h2>
				<div id="coupon-list" class="mb-4 row">
					<c:forEach items="${couponList}" var="coupon">
						<div class="col-4 mb-4">
							<div class="card">
								<div class="card-body">
									<h5>${coupon.couponName}</h5>
									<p>${coupon.couponDes}</p>
									<p>
										<strong>쿠폰 기간</strong> 
										${fn:substring(coupon.startDate, 0, 10)} ~ ${fn:substring(coupon.endDate, 0, 10)}
									</p>
									<%-- 발급 받은 쿠폰 확인 하기--%>
									<c:choose>
											<c:when test="${coupon.issued != null && coupon.issued != ''}">
													<button class="btn btn-secondary" disabled>발급 받은 쿠폰</button>
											</c:when>
											<c:otherwise>
													<button class="btn btn-primary coupon-issued" data-coupon-no="${coupon.couponNo}" data-member-no="${member.memberNo}" >쿠폰 발급 받기</button>
											</c:otherwise>
									</c:choose>
								</div>
							</div>
						</div>
					</c:forEach>

					<c:if test="${couponList.size() == 0}" >
						<div class="alert alert-secondary text-center">
                <strong>쿠폰 정보가 없습니다.</strong>
            </div>
					</c:if>
				</div>

				<hr>

				<!-- 리뷰 -->
				<h2 class="mt-5">리뷰</h2>
				<div id="review-list" class="row">
					<%-- 리뷰 VO 확인 하고 수정 하기 --%>
					<c:forEach items="${reviewList}" var="review">
						<div class="col-4 mb-4">
							<div class="card">
								<div class="card-body">
									<div class="d-flex align-items-center">
										<img class="img-profile rounded-circle"
												src="/upload/member/${review.fileSaveName}" 
												onerror="this.src='${pageContext.request.contextPath}/assets/img/undraw_profile.svg'" 
												width="30px"
											>
											${review.memberName}
											<button data-member-no="${review.memberNo}" class="btn btn-sm btn-outline-secondary ms-2 follow ${review.followNo == 0 ? '' : 'd-none'}">팔로우</button>
											<button data-member-no="${review.memberNo}" class="btn btn-sm btn-outline-secondary ms-2 follower ${review.followNo != 0 ? '' : 'd-none'}">팔로우 취소</button>
									</div>
									${review.followNo}
									<p class="mt-2">${review.reviewContent}</p>
									<div>
										<p>⭐ ${review.reviewScore}점</p>
									</div>
									<div class="d-flex justify-content-between">
										<small>${fn:substring(review.createDate, 0, 10)}</small>
									</div>
								</div>
							</div>
						</div>
					</c:forEach>

					<c:if test="${reviewList.size() == 0}" >
						<div class="alert alert-secondary text-center">
                <strong>리뷰 정보가 없습니다.</strong>
            </div>
					</c:if>
				</div>

				<!-- Map -->
				<div class="map-container mb-4" id="map"></div>
				
				<hr>
			
				<!-- 다른 식당 -->
				<h2 class="mt-5">Nearby Restaurants</h2>
				<div id="nearby-list" class="row">
					<div class="col-md-4 mb-3">
						<div class="border p-3">
							<h6>Restaurant Name</h6>
							<p>Category: Italian</p>
							<p>Rating: 4.3</p>
						</div>
					</div>
				</div>
			
				<!-- 관리자 옵션 -->
				<div class="mt-4">
					<button class="btn btn-primary" id="manage-btn">Manage</button>
					<button class="btn btn-outline-secondary" id="inquiry-btn">Inquire</button>
					<button class="btn btn-outline-info" id="verify-owner-btn">Verify Ownership</button>
				</div>
			</div>
		</main>

		<%-- 네이버 지도 --%>
	<script type="text/javascript" src="https://oapi.map.naver.com/openapi/v3/maps.js?ncpClientId=eze5i4kjnp"></script>
	<script>
	  let mapDiv = document.getElementById('map'); // 'map'으로 선언해도 동일
		if (mapDiv) {
			//옵션 없이 지도 객체를 생성하면 서울 시청을 중심으로 하는 16 레벨의 지도가 생성됩니다.
			let mapOptions = {
				center: new naver.maps.LatLng("${restaurant.restaurantX}", "${restaurant.restaurantY}"),
				zoom: 16,
				draggable: false,
				disableTwoFingerTapZoom: false,
				disableDoubleTapZoom: false,
				disableDoubleClickZoom: false,
				scrollWheel: false,
			};

			let map = new naver.maps.Map(mapDiv, mapOptions);

			let marker = new naver.maps.Marker({
				position: new naver.maps.LatLng("${restaurant.restaurantX}", "${restaurant.restaurantY}"),
				map: map,
				title: '${restaurant.restaurantName}',
			});
		}
	</script>

		<script type="text/javascript">
			document.querySelectorAll(".coupon-issued").forEach((item) => {
				item.addEventListener("click", async (e)=> {
						const { couponNo, memberNo } = e.target.dataset;
						const formData = new FormData();
						formData.append("couponNo", couponNo);
						formData.append("memberNo", memberNo);
						try {
							// 내가 빨로우 할 넘버
							let response = await fetch(`/hurdles/site/couponIssued.do`,
									{method: "POST", body: formData}
							);

							if (!response.ok) throw new Error("Failed to fetch data");
						
							let data = await response.json(); // JSON 형태로 응답 처리
							
							if (data != null && data.item) {
								if (data.item == "success") {
									item.disabled = true;
									item.classList.add("btn-secondary");
									item.classList.remove("btn-primary");
								}
							}
						} catch (error) {
							console.error("Error fetching data:", error);
						}
				})
			})

			document.querySelectorAll(".follow").forEach((item) => {
				item.addEventListener("click", async (e)=> {
					const { dataset : { memberNo } } = e.target;
					console.log(memberNo);
					let result = await follow(memberNo);
					if (result) {
						followBtnChange(".follow", memberNo, false);
						followBtnChange(".follower", memberNo, true);
					}
				})
			})

			document.querySelectorAll(".follower").forEach((item) => {
				item.addEventListener("click", async (e)=> {
					const { dataset : { memberNo } } = e.target;
					console.log(memberNo);
					let result = await cancelFollow(memberNo);
					if (result) {
						followBtnChange(".follower", memberNo, false);
						followBtnChange(".follow", memberNo, true);
					}
				})
			})

			function followBtnChange(className, memberNo, bRemove) {
				document.querySelectorAll(className).forEach((item) => {
						if (item.dataset.memberNo == memberNo) {
							
							bRemove ? item.classList.remove("d-none") : item.classList.add("d-none")
						}
					});
			}

			async function follow(memberNo) {
					try {
						// 내가 빨로우 할 넘버
						let response = await fetch(
								`/hurdles/site/followMember.do?memberNo=` + memberNo,
							{method: "POST"}
						);
						if (!response.ok) throw new Error("Failed to fetch data");
					
						let data = await response.json(); // JSON 형태로 응답 처리
						
						if (data != null && data.item) {
							let item = data.item;
							
							
							if (item == "success") {
								// document.querySelector("#follow").classList.add("d-none");
								// document.querySelector("#cancelFollow").classList.remove("d-none");
								// let followerCnt = document.querySelector("#followerCnt");
								// +followerCnt.innerText++;
								return true
							}
						}
					} catch (error) {
						console.error("Error fetching data:", error);
						return false;
					}
				}
				
			async function cancelFollow(memberNo) {
					try {
						// 내가 빨로우 끊을 넘버
							let response = await fetch(
										`/hurdles/site/cancelFollowMember.do?memberNo=` + memberNo,
									{method: "POST"}
								);
							if (!response.ok) throw new Error("Failed to fetch data");
					
						let data = await response.json(); // JSON 형태로 응답 처리
						console.log(data);
						if (data != null && data.item) {
							let item = data.item;
							
							if (item == "success") {
								return true
							}
						}
					}catch (error) {
							console.error("Error fetching data:", error);
							return false;
						}
				}
			</script>
	<jsp:include page="/WEB-INF/view/site/layout/footer.jsp" />
	<jsp:include page="/WEB-INF/view/site/layout/prescript.jsp" />
</body>
</html>
	


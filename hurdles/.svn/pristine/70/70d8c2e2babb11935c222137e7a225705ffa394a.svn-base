<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>

<c:set var="nav" value="main" scope="request"/>
<c:set var="titleName" value="메인" scope="request"/>
<c:set var="paging" value="${paginationInfo}"/>
<c:set var="pagingOption" property="" value="${paginationInfo.getSearchVo()}"/>

<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    
    <title>장바구니 리스트</title>
<style type="text/css">
.quantity-input {
  width: 60px;
  padding: 5px;
  text-align: center;
}

.card-custom {
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  border-radius: 10px;
}

.card-img-top {
  height: 180px;
  object-fit: cover;
  border-top-left-radius: 10px;
  border-top-right-radius: 10px;
}

.card-body {
  padding: 15px;
}

.btn-custom {
  background-color: #f76c6c;
  color: white;
  transition: background-color 0.3s;
}

.btn-custom:hover {
  background-color: #e05959;
}

.price-text, .product-total-price {
  font-weight: bold;
  color: #333;
}
</style>    
    <jsp:include page="/WEB-INF/view/site/layout/prestyle.jsp" />
</head>

<body>
    <jsp:include page="/WEB-INF/view/site/layout/header.jsp" />

    <main class="main">
         <div class="container-fluid">
        
            <form action="/hurdles/site/pay.do" method="post" id="cartForm">
			    <div class="row">
			        <c:forEach var="cart" items="${cartList}" varStatus="status">
			            <div class="col-md-4 col-lg-3 mb-4 cart-item">
			                <div class="card card-custom h-100">
			                    <!-- 체크박스 추가 -->
			                    <input type="checkbox" class="form-check-input cart-checkbox" data-price="${cart.productPrice}" data-qty="${cart.productQty}" id="cart-checkbox-${cart.cartNo}" data-cartno="${cart.cartNo}"/>
			                    <div class="card-body d-flex flex-column justify-content-between">
			                        <h5 class="card-title">${cart.productName}</h5>
			                        <p class="price-text">${cart.productPrice} 원</p>
			                        <div class="form-group">
			                            <label for="quantity-${cart.cartNo}">수량</label>
			                            <input type="number" id="quantity-${cart.cartNo}" name="productQty" value="${cart.productQty}" class="form-control quantity-input cart-quantity" data-price="${cart.productPrice}">
			                        </div><br>
			                        <p class="card-text">상품 총 가격 : <span class="product-total-price">${cart.productQty * cart.productPrice}</span> 원</p>
			                    </div>
			                </div>
			            </div>
			        </c:forEach>
			    </div>
			
			    <!-- 총합계 -->
			    <div class="mt-4">
			        <h4>총합계: <span id="totalPrice">0</span>원</h4>
			    </div>
				
			    <button type="submit" class="btn btn-danger btn-block mt-4 col-3">주문하기</button>
			</form>
        </div>
    </main>

<script>
// 총 가격 계산 함수
function calculateTotalPrice() {
    let total = 0;

    // 모든 체크된 체크박스에 대해 가격 계산
    document.querySelectorAll('.cart-checkbox:checked').forEach(checkbox => {
        const quantity = checkbox.closest('.cart-item').querySelector('.cart-quantity').value;
        const pricePerItem = checkbox.dataset.price;

        total += quantity * pricePerItem;
    });

    // 총합계 표시
    document.querySelector('#totalPrice').innerText = total.toLocaleString();
}

// 체크박스 및 수량 입력에 대한 이벤트 처리
document.querySelectorAll('.cart-item').forEach(cartItem => {
    const checkbox = cartItem.querySelector('.cart-checkbox');
    const quantityInput = cartItem.querySelector('.cart-quantity');
    const productTotalPriceDom = cartItem.querySelector('.product-total-price');
    
    // 수량 변경 이벤트
    quantityInput.addEventListener('input', () => {
        const quantity = quantityInput.value;
        const pricePerItem = quantityInput.dataset.price;
        
        // 상품 총 가격 업데이트
        productTotalPriceDom.innerText = (quantity * pricePerItem).toLocaleString();

        // 체크박스가 체크된 경우 총합계 재계산
        if (checkbox.checked) {
            calculateTotalPrice();
        }
    });

    // 체크박스 클릭 이벤트
    checkbox.addEventListener('change', () => {
        calculateTotalPrice();
    });
});

// 페이지 로드 시 초기 총 가격 계산
calculateTotalPrice();

//폼 제출 전에 체크된 항목의 cartNo와 productQty만 전송
document.getElementById('cartForm').addEventListener('submit', function(event) {
    // 폼에서 기존의 cartNo와 productQty들을 제거
    document.querySelectorAll('input[name="cartNo"]').forEach(input => input.remove());
    document.querySelectorAll('input[name="productQty"]').forEach(input => input.remove());

    // 체크된 항목에 대해 cartNo와 productQty를 동적으로 추가
    document.querySelectorAll('.cart-checkbox:checked').forEach(checkbox => {
        const cartNo = checkbox.dataset.cartno;
        const productQty = checkbox.closest('.cart-item').querySelector('.cart-quantity').value;
        
        console.log("cartNo:", cartNo); // 확인
        console.log("productQty:", productQty); // 확인
        
        if (cartNo && productQty) {  // 값이 유효한지 확인
            // cartNo input 생성
            const cartNoInput = document.createElement('input');
            cartNoInput.type = 'hidden';
            cartNoInput.name = 'cartNo';
            cartNoInput.value = cartNo;
            this.appendChild(cartNoInput);

            // productQty input 생성
            const productQtyInput = document.createElement('input');
            productQtyInput.type = 'hidden';
            productQtyInput.name = 'productQty';
            productQtyInput.value = productQty;
            this.appendChild(productQtyInput);
        } else {
            console.error("cartNo 또는 productQty 값이 없습니다.");
        }
    });
});
  
</script>
    <jsp:include page="/WEB-INF/view/site/layout/footer.jsp" />
    <jsp:include page="/WEB-INF/view/site/layout/prescript.jsp" />
</body>
</html>
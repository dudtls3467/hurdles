<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="review">

	<select id="reviewDetail" resultType="reviewVo" parameterType="reviewVo">
      	SELECT A.REVIEW_SCORE,
		        A. REVIEW_CONTENT,
		        A.CREATE_DATE,
		        A.DELYN,
			A.REVIEW_NO,
		        B.CREATE_DATE,
		        B.REMOVE_DATE,
		        C.PRODUCT_NO,
		        C.ORDERS_PRODUCT_QTY,
		        D.RESTAURANT_NAME,
		        E.PRODUCT_NAME,
                F.FILE_SAVE_NAME
		FROM REVIEW A, ORDERS B, ORDERS_PRODUCT C, RESTAURANT D, FILES F, PRODUCT E
		WHERE A.MEMBER_NO = 3
		  AND  B.ORDERS_NO = C.ORDERS_NO
		  AND D.RESTAURANT_NO = A.RESTAURANT_NO
          AND D.FILE_NO = F.FILE_NO
		  AND C.PRODUCT_NO = E.PRODUCT_NO
          AND  A.DELYN = 'N'
		  AND A.REVIEW_NO = 1

	</select>
	

	
	<update id="reviewDelete" parameterType="reviewVo">
		
		UPDATE REVIEW SET
    		DELYN = 'Y'
		WHERE REVIEW_NO = #{reviewNo}
	
	</update>
	
	<select id="blackReviewList" resultType="reviewVo" parameterType="pagenation">
		SELECT R.* ,M.*,Res.*
		FROM Review R
		LEFT join MEMBER_PROFILE M ON (M.MEMBER_NO = R.MEMBER_NO)
        LEFT join RESTAURANT Res ON (R.RESTAURANT_NO = Res.RESTAURANT_NO)
		WHERE R.DELYN = 'Y' 
		ORDER BY R.REVIEW_NO DESC
<!-- 		<if test="searchVo.reviewContent != null and searchVo.reviewContent != ''"> -->
<!-- 			AND reviewContent LIKE '%'||#{searchVo.reviewContent}||'%' -->
<!-- 		</if> -->
<!-- 		<if test="searchVo.memName != null and searchVo.memName != ''"> -->
<!-- 			AND M.MEMBER_NAME LIKE '%'||#{searchVo.memberName}||'%' -->
<!-- 		</if> -->
<!-- 		ORDER BY B.REG_DATE DESC -->
<!-- 	    OFFSET (#{pageNo} - 1) * #{recordCountPerPage} ROWS FETCH FIRST #{recordCountPerPage} ROWS ONLY -->
	</select>
	
<!-- 	<select id="blackReviewList" resultType="reviewVo" parameterType="pagenation"> -->
<!-- 	SELECT R.* ,M.*,Res.* -->
<!-- 		FROM Review R -->
<!-- 		LEFT join MEMBER_PROFILE M ON (M.MEMBER_NO = R.MEMBER_NO) -->
<!--         LEFT join RESTAURANT Res ON (R.RESTAURANT_NO = Res.RESTAURANT_NO) -->
<!-- 		WHERE R.DELYN = 'Y'  -->
<!-- 		AND REVIEW_NO = #{reviewNo} -->
<!-- 		ORDER BY R.REVIEW_NO DESC -->
	
<!-- 	</select> -->
	<select id="reviewReportDetail" resultType="reviewVo" parameterType="pagenation">
	SELECT RR.REVIEW_REPORT_NO 		AS REVIEW_REPORT_NO,
               RR.MEMBER_NO         AS MEMBER_NO,
               M.MEMBER_NAME        AS MEMBER_NAME,
               RR.REVIEW_REPORT_DES AS REVIEW_REPORT_DES,
               R.REVIEW_CONTENT	    AS REVIEW_CONTENT,
               RR.CREATE_DATE 	    AS CREATE_DATE, 
               R. REVIEW_SCORE	    AS REVIEW_SCORE,
               RES.RESTAURANT_NAME  AS RESTAURANT_NAME,
               RR.TARGET_MEMBER_NO  AS TARGET_MEMBER_NO,
               MP.MEMBER_NAME	    AS TARGET_MEMBER_NAME
		FROM Review_REPORT RR
		LEFT join MEMBER_PROFILE M ON (M.MEMBER_NO = RR.MEMBER_NO)
        LEFT join REVIEW R ON (RR.REVIEW_NO = R.REVIEW_NO)
        LEFT join RESTAURANT Res ON (R.RESTAURANT_NO = Res.RESTAURANT_NO)
        LEFT JOIN MEMBER_PROFILE MP ON (MP.MEMBER_NO = RR.TARGET_MEMBER_NO)
		WHERE R.DELYN = 'N'
		AND  RR.REVIEW_REPORT_NO = #{REVIEW_REPORT_NO} 	
	
	</select>
	
	
	<select id="ReviewReportList" resultType="reviewVo" parameterType="pagenation">
	SELECT RR.REVIEW_REPORT_NO 		AS REVIEW_REPORT_NO,
               RR.MEMBER_NO         AS MEMBER_NO,
               M.MEMBER_NAME        AS MEMBER_NAME,
               RR.REVIEW_REPORT_DES AS REVIEW_REPORT_DES,
               R.REVIEW_CONTENT	    AS REVIEW_CONTENT,
               RR.CREATE_DATE 	    AS CREATE_DATE, 
               R. REVIEW_SCORE	    AS REVIEW_SCORE,
               RES.RESTAURANT_NAME  AS RESTAURANT_NAME,
               RR.TARGET_MEMBER_NO  AS TARGET_MEMBER_NO,
               MP.MEMBER_NAME	    AS TARGET_MEMBER_NAME
		FROM Review_REPORT RR
		LEFT join MEMBER_PROFILE M ON (M.MEMBER_NO = RR.MEMBER_NO)
        LEFT join REVIEW R ON (RR.REVIEW_NO = R.REVIEW_NO)
        LEFT join RESTAURANT Res ON (R.RESTAURANT_NO = Res.RESTAURANT_NO)
        LEFT JOIN MEMBER_PROFILE MP ON (MP.MEMBER_NO = RR.TARGET_MEMBER_NO)
		WHERE R.DELYN = 'N' 
	
	</select>
	
	<select id="getAllCount" parameterType="pagenation" resultType="int" >
		SELECT COUNT(*)
		FROM REVIEW_REPORT
		WHERE REVIEW_REPORT_NO = #{searchVo.reviewReportNo}
		<where>
			<if test="searchVo.reviewReportNo != null and searchVo.reviewReportNo != ''">
				AND REVIEW_REPORT_NO '%'||#{searchVo.reviewReportNo}||'%'
			</if>
		</where>
	</select>

</mapper>